@model E_journal.Models.ViewModels.TeacherViewModel
@{
    ViewData["Title"] = "Создание преподавателя";
    string formMethod = "CreateTeacher";
    if (Model.Id != 0)
    {
        ViewData["Title"] = "Редактирование преподавателя";
        formMethod = "EditTeacher";
    }
}

<div class="container">
    <div class="modal-content">
        <div class="modal-header">
            <h6>@ViewData["Title"]</h6>
            @*<button class="close" data-dismiss="modal" area-hidden="true"><i class="bi bi-x-circle"></i></button>*@
        </div>
        <div class="modal-body">
            @using (Html.BeginForm(formMethod, "Teacher", FormMethod.Post))
            {
                @Html.ValidationSummary(true)
                <div class="form-group">
                    <label>ФИО</label>
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Name, "Не введено ФИО", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Дисциплина</label>
                    @Html.TextBoxFor(model => model.Discipline, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Discipline, "Не введена дисциплина", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <button class="btn btn-outline-dark" type="submit"><i class="bi bi-check2">  Отправить</i></button>
                </div>
            }
        </div>
    </div>
</div>